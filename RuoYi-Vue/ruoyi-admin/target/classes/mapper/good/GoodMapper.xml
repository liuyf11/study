<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.good.mapper.GoodMapper">
    
    <resultMap type="Good" id="GoodResult">
        <result property="goodId"    column="good_id"    />
        <result property="goodName"    column="good_name"    />
        <result property="price"    column="price"    />
        <result property="imageUrl"    column="image_url"    />
        <result property="typeId"    column="type_id"    />
    </resultMap>

    <sql id="selectGoodVo">
        select good_id, good_name, price, image_url, type_id from good
    </sql>

    <select id="selectGoodList" parameterType="Good" resultMap="GoodResult">
        <include refid="selectGoodVo"/>
        <where>  
            <if test="goodName != null  and goodName != ''"> and good_name like concat('%', #{goodName}, '%')</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="imageUrl != null  and imageUrl != ''"> and image_url = #{imageUrl}</if>
            <if test="typeId != null "> and type_id = #{typeId}</if>
        </where>
    </select>
    
    <select id="selectGoodByGoodId" parameterType="Long" resultMap="GoodResult">
        <include refid="selectGoodVo"/>
        where good_id = #{goodId}
    </select>

    <!--  联表查询的sql标签  -->
    <select id="selectGoodListVo" resultType="com.ruoyi.good.domain.vo.GoodVo">
        SELECT good.*, good_type.type_name
        FROM good
        INNER JOIN good_type ON good.type_id = good_type.type_id
        <where>
            <if test="goodName != null">
                AND good_name LIKE CONCAT('%', #{goodName}, '%')
            </if>
            <if test="price != null">
                AND price = #{price}
            </if>
            <if test="imageUrl != null">
                AND image_url = #{imageUrl}
            </if>
            <if test="typeId != null">
                AND good.type_id = #{typeId}
            </if>
        </where>
    </select>


    <insert id="insertGood" parameterType="Good" useGeneratedKeys="true" keyProperty="goodId">
        insert into good
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodName != null and goodName != ''">good_name,</if>
            <if test="price != null">price,</if>
            <if test="imageUrl != null">image_url,</if>
            <if test="typeId != null">type_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodName != null and goodName != ''">#{goodName},</if>
            <if test="price != null">#{price},</if>
            <if test="imageUrl != null">#{imageUrl},</if>
            <if test="typeId != null">#{typeId},</if>
         </trim>
    </insert>




    <update id="updateGood" parameterType="Good">
        update good
        <trim prefix="SET" suffixOverrides=",">
            <if test="goodName != null and goodName != ''">good_name = #{goodName},</if>
            <if test="price != null">price = #{price},</if>
            <if test="imageUrl != null">image_url = #{imageUrl},</if>
            <if test="typeId != null">type_id = #{typeId},</if>
        </trim>
        where good_id = #{goodId}
    </update>

    <delete id="deleteGoodByGoodId" parameterType="Long">
        delete from good where good_id = #{goodId}
    </delete>

    <delete id="deleteGoodByGoodIds" parameterType="String">
        delete from good where good_id in 
        <foreach item="goodId" collection="array" open="(" separator="," close=")">
            #{goodId}
        </foreach>
    </delete>
</mapper>